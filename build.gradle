plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
   // id "java"
    //id "org.jsonschema2pojo" version "1.2.1"
}

/*jsonSchema2Pojo {
    source.setFrom("src/test/java/reqresgrouptests/json")
    targetPackage.set("reqresgrouptests.pojos")
    sourceType.set("jsonschema")

    // Without kotlin dsl
    // source.setFrom files("${project.rootDir}/src/main/resources/json")
    // targetPackage = 'com.example.generated.pojos'
    // sourceType = 'jsonschema'
}*/

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"
dependencies {
    implementation 'org.testng:testng:7.1.0'
    testImplementation(
            'io.rest-assured:rest-assured:5.3.1',
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            'org.assertj:assertj-core:3.24.2'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
